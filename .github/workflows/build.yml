name: Build APK (Android Only, Unsigned)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # 2Ô∏è‚É£ Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.0
        with:
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: '12266719'
          packages: 'platforms;android-35 build-tools;35.0.0 platform-tools'

      # 3Ô∏è‚É£ Install NDK
      - name: Install NDK
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            --channel=0 \
            --install "ndk;28.2.13676358"
          echo "NDK_HOME=$ANDROID_HOME/ndk/28.2.13676358" >> $GITHUB_ENV
          sed -i '10i\
          \
              ndkVersion = "28.2.13676358"' ${{ github.workspace }}/V2rayNG/app/build.gradle.kts

      # 4Ô∏è‚É£ Restore cached libtun2socks
      - name: Restore cached libtun2socks
        id: cache-libtun2socks-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/libs
          key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hev-socks5-tunnel/HEAD') }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

      # 5Ô∏è‚É£ Build libtun2socks if cache miss
      - name: Build libtun2socks
        if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
        run: bash compile-tun2socks.sh

      # 6Ô∏è‚É£ Save libtun2socks
      - name: Save libtun2socks
        if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/libs
          key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hev-socks5-tunnel/HEAD') }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

      - name: Copy libtun2socks to app
        run: cp -r ${{ github.workspace }}/libs ${{ github.workspace }}/V2rayNG/app

      # 7Ô∏è‚É£ Fetch libv2ray
      - name: Fetch AndroidLibXrayLite tag
        run: |
          pushd AndroidLibXrayLite
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "Current tag in this repo: $CURRENT_TAG"
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV
          popd

      - name: Download libv2ray
        uses: robinraju/release-downloader@v1.12
        with:
          repository: '2dust/AndroidLibXrayLite'
          tag: ${{ env.CURRENT_TAG }}
          fileName: 'libv2ray.aar'
          out-file-path: V2rayNG/app/libs/

      # 8Ô∏è‚É£ Restore & Build libhysteria2
      - name: Restore cached libhysteria2
        id: cache-libhysteria2-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/hysteria/libs
          key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

      - name: Setup Golang
        if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: 'AndroidLibXrayLite/go.mod'
          cache: false

      - name: Build libhysteria2
        if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
        run: bash libhysteria2.sh

      - name: Save libhysteria2
        if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/hysteria/libs
          key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

      - name: Copy libhysteria2 to app
        run: cp -r ${{ github.workspace }}/hysteria/libs ${{ github.workspace }}/V2rayNG/app

      # üîü Build unsigned APK
      - name: Build APK (unsigned)
        run: |
          cd ${{ github.workspace }}/V2rayNG
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          chmod +x gradlew
          ./gradlew assembleRelease

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload APK artifacts
      - name: Upload arm64-v8a APK
        uses: actions/upload-artifact@v4.6.2
        with:
          name: arm64-v8a
          path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/*/release/*arm64-v8a*.apk

      - name: Upload armeabi-v7a APK
        uses: actions/upload-artifact@v4.6.2
        with:
          name: armeabi-v7a
          path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/*/release/*armeabi-v7a*.apk

      - name: Upload x86 APK
        uses: actions/upload-artifact@v4.6.2
        with:
          name: x86-apk
          path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/*/release/*x86*.apk
